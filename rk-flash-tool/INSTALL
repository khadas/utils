#!/bin/bash

set -e -o pipefail

BASE=$(dirname "$(readlink -fm "$0")")
FLASH_TOOL="$BASE/flash-tool"
ANDROID_TOOL_CONFIG="$BASE/tools/Linux_Upgrade_Tool/config.ini"
KHADAS_TOOL="$BASE/rk-burn-tool"
RULES_DIR="$BASE/rules"
INSTALL_DIR="/usr/local/bin"

if [ -f /etc/lsb-release ]; then
	DISTRIB=$(cat /etc/lsb-release | grep "DISTRIB_ID" | awk -F "=" '{print $2}')
	DISTRIB_RELEASE=$(cat /etc/lsb-release | grep "DISTRIB_RELEASE" | awk -F "=" '{print $2}')
else
	OS=$(hostnamectl | grep "Operating System" | awk -F ": " '{ print $2}')
	OS_RELEASE=$(cat /etc/os-release | grep "BUILD_ID" | awk -F "=" '{print $2}')
fi

RULE=

RED='\033[0;31m'
RESET='\033[m'

error_msg() {
	echo -e ${RED}Error:${RESET} $1
}

install_usb_rules() {
	echo "Installing USB rules..."

	if [[ "$DISTRIB_RELEASE" =~ "16" || "$DISTRIB_RELEASE" =~ "18" ]]; then
	    RULE="$RULES_DIR/80-rockchip-usb.rules"
	    sudo cp $RULE /etc/udev/rules.d
	else
	    error_msg "Ubuntu $DISTRIB_RELEASE haven't been verified!"
	    exit 1
	fi

	sudo udevadm control --reload-rules
}

prepare_host() {

	if [ "${#DISTRIB}" -gt 0 ]; then
		case "$DISTRIB" in
		    UBUNTU | DEBIAN)
			echo "Preparing host: Distributin $DISTRIB ($DISTRIB_RELEASE)"
			echo ""
			prepare_host_dpkg
			;;
		esac
	elif [ "${#OS}" -gt 0 ]; then
		case "$OS" in
		    "Arch Linux")
			echo "Preparing host: OS $OS ($OS_RELEASE)"
			echo "usb rules are already in shape!"
			;;
		esac
	else
	    echo -e "Given distribution is not supported and hasn't been verified."
	    exit 1
	fi
}

prepare_host

echo "Installing flash-tool..."
mkdir -p $INSTALL_DIR
sudo ln -fs $KHADAS_TOOL $INSTALL_DIR/$(basename $KHADAS_TOOL)

# Install configuration for Linux_Upgrade_Tool
echo "Installing configuration..."
mkdir -p ~/.config/upgrade_tool
cp $ANDROID_TOOL_CONFIG ~/.config/upgrade_tool/

echo "Done!"
